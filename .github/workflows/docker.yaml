name: Build Docker image

on:
  push:
    tags:
      - v*
    branches:
      - main
    paths:
      - .github/workflows/docker.yaml
      - .dockerignore
      - Dockerfile
      - cmd/**
      - internal/**
      - go.*
      - web/**
      - .yarn
      - .yarnrc.yml
      - biome.jsonc
      - package.json
      - tsconfig.json
      - vite.config.ts
      - yarn.lock

permissions:
  contents: read

jobs:
  build:
    name: Build and publish
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write # Publish OCI image
      attestations: write # Publish attestations
      id-token: write # Publish attestations

    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          # We need the entire history to determine the current version
          fetch-depth: 0
          persist-credentials: false

      - name: Log in to the container registry
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3.5.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1

      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0

      - name: Determine tag
        id: determine_tag
        run: |
          echo "tag=${TAG#v}" >> "$GITHUB_OUTPUT"
          echo -n "revision=" >> "$GITHUB_OUTPUT"
          git describe >> "$GITHUB_OUTPUT"
          echo -n "date=" >> "$GITHUB_OUTPUT"
          date --iso-8601=seconds >> "$GITHUB_OUTPUT"
        env:
          TAG: ${{ (github.ref_type == 'tag' && github.ref_name) || 'latest' }}

      - name: Build and publish
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        id: push
        with:
          context: .
          push: true
          # NOTE: Includes build args and full Dockerfile. No secrets are ever
          # used in build args
          provenance: mode=max
          # NOTE: This currently only identifies golang dependencies. Additional
          # work is required for the frontend
          sbom: true
          platforms: linux/amd64,linux/arm64
          tags: ghcr.io/alexgustafsson/cupdate:${{ steps.determine_tag.outputs.tag }}
          build-args: |
            CUPDATE_VERSION=${{ steps.determine_tag.outputs.revision }}
          labels: |
            org.opencontainers.image.title=Cupdate
            org.opencontainers.image.description=Cupdate keeps track of image updates.
            org.opencontainers.image.source=https://github.com/AlexGustafsson/cupdate
            org.opencontainers.image.version=${{ steps.determine_tag.outputs.tag }}
            org.opencontainers.image.revision=${{ steps.determine_tag.outputs.revision }}
            org.opencontainers.image.created=${{ steps.determine_tag.outputs.date }}
            org.opencontainers.image.licenses=MIT

      - name: Attest
        uses: actions/attest-build-provenance@e8998f949152b193b063cb0ec769d69d929409be #v2.4.0
        with:
          subject-name: ghcr.io/alexgustafsson/cupdate
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
